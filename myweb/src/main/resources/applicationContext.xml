<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-4.3.xsd ">


	<context:component-scan
		base-package="org.boli.myweb"></context:component-scan>


	<!-- 1.引入属性文件，在配置中占位使用 -->
	<context:property-placeholder
		location="classpath:db/mysql/jdbc.properties" file-encoding="UTF-8" />
	<!-- 2.配置C3P0数据源 -->
	<bean id="datasource"
		class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass" value="${jdbc.driverClass}" />
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="user" value="${jdbc.user}" />
		<property name="password" value="${jdbc.password}" />
		<property name="acquireIncrement"
			value="${jdbc.acquireIncrement}"></property>
		<property name="initialPoolSize"
			value="${jdbc.initialPoolSize}"></property>
		<property name="minPoolSize" value="${jdbc.minPoolSize}"></property>
		<property name="maxPoolSize" value="${jdbc.maxPoolSize}"></property>
	</bean>

	<!-- 3.会话工厂bean sqlSessionFactoryBean -->
	<bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 数据源 -->
		<property name="dataSource" ref="datasource"></property>
		<!-- 别名 -->
		<property name="typeAliasesPackage"
			value="org.boli.myweb.entity"></property>
		<!-- sql映射文件路径 -->
		<property name="mapperLocations"
			value="classpath:org/boli/myweb/mapper/*Mapper.xml"></property>
	</bean>

	<!-- 4.自动扫描对象关系映射 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!--指定会话工厂，如果当前上下文中只定义了一个则该属性可省去 -->
		<property name="sqlSessionFactoryBeanName"
			value="sqlSessionFactory"></property>
		<!-- 指定要自动扫描接口的基础包，实现接口 -->
		<property name="basePackage" value="org.boli.myweb.mapper"></property>
	</bean>

	<!-- 5.声明式事务管理 -->
	<!-- 定义事物管理器，由spring管理事务 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="datasource"></property>
	</bean>

	<!-- 6.配置通知 -->
	<tx:advice id="txAdvice"
		transaction-manager="transactionManager">
		<tx:attributes>
			<!-- 传播行为 -->
			<tx:method name="insert*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="select*" propagation="SUPPORTS"
				read-only="true" />
		</tx:attributes>
	</tx:advice>

	<!-- 7.AOP切入 -->
	<aop:config>
		<!--切入点 -->
		<aop:pointcut
			expression="execution(* org.boli.myweb.service.*.*(..))"
			id="pointcut" />
		<!-- 配置切面 -->
		<aop:advisor advice-ref="txAdvice" pointcut-ref="pointcut" />
	</aop:config>



	<!--支持注解驱动的事务管理，指定事务管理器 -->
	<tx:annotation-driven
		transaction-manager="transactionManager" />

	<!-- aspectj支持自动代理实现AOP功能 -->
	<aop:aspectj-autoproxy proxy-target-class="true"></aop:aspectj-autoproxy>
</beans>